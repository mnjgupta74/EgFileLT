using System;
using EgBL;
using System.Configuration;
using System.Net;
using System.Web.UI.WebControls;
using System.Text.RegularExpressions;

public partial class DoIT : System.Web.UI.Page
{
    string url = ConfigurationManager.AppSettings["MerchantURL"].ToString();
    string url1 = ConfigurationManager.AppSettings["MerchantURL1"].ToString();
    //string url = "https://egras.rajasthan.gov.in/SampleMerchantPreLogin.aspx";
    protected void Page_Load(object sender, EventArgs e)
    {
        DivDoIT.Visible = true;
        lblMsgMobileVerify.Visible = false;
        lblMsgOtp.Visible = false;

        //RIPSWebServ.RipsIntegrationService dd = new RIPSWebServ.RipsIntegrationService();
        //ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
        //string result = dd.ripsIFMSIntegration("17180011401", "IFMSAdmin", "IFMSPassword");
        //CBI_Push.EGRASS ppppp = new CBI_Push.EGRASS();
        //string returndata = ppppp.EGRASSFETCHDETAILS("JQn63AJeVIay+uMWEDTQV3UKFeVXwiJA4fifzldA1epTTF5u7oeXb7vqIiv1eiDoVfSVCQ2a65nXv06qcs6P+OVjn2EJBovLA+CF99yA9/0S8sjbjx0FIFKZNaU+daCtwykKDZ5wNv+fLo/797aENfq7Si34U/3iEMK6tBkn67u0UYx7BgSZ8/JUJxcROxu8OVOnTyR8Uwy+OH3+E4o2RAUcaAVK0AXYCdoTx5qSoZ7/kC1pVJP966cNTc7mwaKueaM6c33v3gtrZVkXlrP6nP6qVFyrUgabcyf/8qSZfkoKkxcr7yA5EAFmKKGGYdjYUdVxTFEfgg6g2kiAtQufrNBIq56mUdPdlZrrYKBkUwCH/Khv+W0vFnZ3d99Du+QourQWbQLV54zRcO3t34PNdDyemrsZzwwapv03XFMAzZy1t6CnFN3ZfkWVKYG2LG8WDHwx1m7lr2RSn27yFsmM5L5iyEg82A5GgGgT5IZZbHUtLhrxfkQTDnIsMxMr2T1sxzhU36BLYP0Dr6Lr0ERLu/tveUQzBE+HT8MRCYtVmHo9lzveP24ZPMpsBK9+6Tx6kk/TXNBlVwyKM/Wm/IakDL57ZMlIyr+zR/CTIbkuj+r1tEm/DRbioUjpmJwrcmK/ds0xP4ZTdC2sFbFpejpoSzCep23bAvKvC6ubD9Du4YWQvR86W/bumGGSXCvDyWxbUuBKdPoHRoOs0aaL8gjIZGf5lacTR7NMBcY0BaJ8o2IwuZhlCPYc2ElT/4X+thrk");


        //string plaint = "OfficeXml|<MultiOff><Department><OfficeId>4087</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>5490</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>6318</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>9117</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>10204</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>13634</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>18740</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>16917</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>23552</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>23809</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>28004</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>32151</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>32164</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>32122</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>32147</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>32097</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department><Department><OfficeId>32110</OfficeId><Treasury>1800</Treasury><Amount>100</Amount><BudgetHead>844300108000000000</BudgetHead><DeptCode>64</DeptCode></Department></MultiOff>";
        //SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        //string plainText = obj.Encrypt(plaint, Server.MapPath("~/WebPages/Key/5006.key"));
    }



    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        RemoteClass myremotepost = new RemoteClass();
        SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        //txtEncData.Text = "5XJ4ysW9cUJBftKs6UAdrDtl7R4SZD7CUY8Nhl8/uVW7Z1EDk52MD8JwfS5TKJ2iYXHt/CPqCA0aX5v7ca2fznbBIU1RXcdsqBXzjEOQL0TKfJsYYKy0WMZxl47QySOcbHd5CrdlySraY9gthRNEie9EtvCiC0U2I/bMNW7md2w+NK0m6w71r0Fln4wJi3wa92y4QxKDp7rQ0CDIfYiYnSx/DyZd3bmdzc/D9zBkmgksUWdYY88Cu9KyZmsM+wJjJMIQ1HDPrGUe/S8goqnTWsauuyDRYWugKW/iP2dR0meoyMU3R7wKNwXa/iVZ1FUozro4LS2ku54uggvfgAws7gwGMMa0AWVUKiXUZxBwR2/UtOi6I9VGDnEPb3Vmrmgzgf7woXOsNpoDIyI9tKPVVamixZo0+53WrA8OjbhvMFQvXHr27ZUBJrfcS8ASUW7FtyG9yFGEQlzpa0aQ8p1/oedKJwERb9LtT2uqhxhvgoi3WZ2IYeGQ2qBiKZgwsh03hxXRqJTUtYItWI35QKgSrh3TtBFkl+xxoop91Q6WRrsfknWPKS7gJC1GwfuB6uaBUp5a6BVsja9lY+uBjQjsdZPvhb2pIXWOF0QRufXWRNxG5GhbLdAJROAlTOmWV6SLVj+J1U8LJfSoff2aPFOmQTa1nTABjAVyq9/7R91xxhBGqoTLcHRp1DQWgtBCh3CF1KVT2NRn9tDFMpzQMPbjvstl6pRFHice/hyIK+oExs8j9puVEyxN286Sw2WrpUp+fNda4R2h7fFfxpwgYnrrACsQ1z5dHT0m/cgfuVmhWqGyKWB6VOSUfsp/0kDqI5vLpZV0ZQ74Ct1v2oN8X/4cd/12rTIxG94TawzmkVoTdYIEfeoi2XMfwhFjJKECMSJf";
       
        string plainText = obj.Decrypt(txtEncData.Text.Trim(),System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        string OldAUIN = plainText.Split('|').GetValue(0).ToString().Split('=').GetValue(1).ToString();
        Random objRandom = new Random();
        string AUIN = "DOITTEST" + objRandom.Next().ToString();
        plainText = plainText.Replace(OldAUIN, AUIN);
        string cipherText = obj.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        myremotepost.Add("Encdata", cipherText.ToString());
        myremotepost.Add("merchant_code", txtMerchantCode.Text.Trim());
        myremotepost.Add("AUIN", AUIN);
        myremotepost.Url = url;
        myremotepost.Post();
    }

    protected void btnMultiOfcSubmit_Click(object sender, EventArgs e)
    {
        RemoteClass myremotepost = new RemoteClass();
        SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        //txtEncData.Text = "5XJ4ysW9cUJBftKs6UAdrDtl7R4SZD7CUY8Nhl8/uVW7Z1EDk52MD8JwfS5TKJ2iYXHt/CPqCA0aX5v7ca2fznbBIU1RXcdsqBXzjEOQL0TKfJsYYKy0WMZxl47QySOcbHd5CrdlySraY9gthRNEie9EtvCiC0U2I/bMNW7md2w+NK0m6w71r0Fln4wJi3wa92y4QxKDp7rQ0CDIfYiYnSx/DyZd3bmdzc/D9zBkmgksUWdYY88Cu9KyZmsM+wJjJMIQ1HDPrGUe/S8goqnTWsauuyDRYWugKW/iP2dR0meoyMU3R7wKNwXa/iVZ1FUozro4LS2ku54uggvfgAws7gwGMMa0AWVUKiXUZxBwR2/UtOi6I9VGDnEPb3Vmrmgzgf7woXOsNpoDIyI9tKPVVamixZo0+53WrA8OjbhvMFQvXHr27ZUBJrfcS8ASUW7FtyG9yFGEQlzpa0aQ8p1/oedKJwERb9LtT2uqhxhvgoi3WZ2IYeGQ2qBiKZgwsh03hxXRqJTUtYItWI35QKgSrh3TtBFkl+xxoop91Q6WRrsfknWPKS7gJC1GwfuB6uaBUp5a6BVsja9lY+uBjQjsdZPvhb2pIXWOF0QRufXWRNxG5GhbLdAJROAlTOmWV6SLVj+J1U8LJfSoff2aPFOmQTa1nTABjAVyq9/7R91xxhBGqoTLcHRp1DQWgtBCh3CF1KVT2NRn9tDFMpzQMPbjvstl6pRFHice/hyIK+oExs8j9puVEyxN286Sw2WrpUp+fNda4R2h7fFfxpwgYnrrACsQ1z5dHT0m/cgfuVmhWqGyKWB6VOSUfsp/0kDqI5vLpZV0ZQ74Ct1v2oN8X/4cd/12rTIxG94TawzmkVoTdYIEfeoi2XMfwhFjJKECMSJf";
        string plainText = obj.Decrypt(txtEncData.Text.Trim(), System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        string OldAUIN = plainText.Split('|').GetValue(0).ToString().Split('=').GetValue(1).ToString();
        Random objRandom = new Random();
        string AUIN = "DOITTEST" + objRandom.Next().ToString();
        plainText = plainText.Replace(OldAUIN, AUIN);
        //string officexml = "";
        string officexml = txtOfficeXml.Text.Trim();
        string cipherText = obj.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        myremotepost.Add("Encdata", cipherText.ToString());
        myremotepost.Add("merchant_code", txtMerchantCode.Text.Trim());
        myremotepost.Add("ChallanType", officexml);
        myremotepost.Add("AUIN", AUIN);
        myremotepost.Url = url;
        myremotepost.Post();
    }

    protected void btnOfficeMismatch_Click(object sender, EventArgs e)
    {
        SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        string CipherText = "5XJ4ysW9cUJBftKs6UAdrDtl7R4SZD7CUY8Nhl8/uVW7Z1EDk52MD8JwfS5TKJ2iYXHt/CPqCA0aX5v7ca2fznbBIU1RXcdsqBXzjEOQL0TKfJsYYKy0WMZxl47QySOcbHd5CrdlySraY9gthRNEie9EtvCiC0U2I/bMNW7md2w+NK0m6w71r0Fln4wJi3wa92y4QxKDp7rQ0CDIfYiYnSx/DyZd3bmdzc/D9zBkmgksUWdYY88Cu9KyZmsM+wJjJMIQ1HDPrGUe/S8goqnTWsauuyDRYWugKW/iP2dR0meoyMU3R7wKNwXa/iVZ1FUozro4LS2ku54uggvfgAws7gwGMMa0AWVUKiXUZxBwR2/UtOi6I9VGDnEPb3Vmrmgzgf7woXOsNpoDIyI9tKPVVamixZo0+53WrA8OjbhvMFQvXHr27ZUBJrfcS8ASUW7FtyG9yFGEQlzpa0aQ8p1/oedKJwERb9LtT2uqhxhvgoi3WZ2IYeGQ2qBiKZgwsh03hxXRqJTUtYItWI35QKgSrh3TtBFkl+xxoop91Q6WRrsfknWPKS7gJC1GwfuB6uaBUp5a6BVsja9lY+uBjQjsdZPvhb2pIXWOF0QRufXWRNxG5GhbLdAJROAlTOmWV6SLVj+J1U8LJfSoff2aPFOmQTa1nTABjAVyq9/7R91xxhBGqoTLcHRp1DQWgtBCh3CF1KVT2NRn9tDFMpzQMPbjvstl6pRFHice/hyIK+oExs8j9puVEyxN286Sw2WrpUp+fNda4R2h7fFfxpwgYnrrACsQ1z5dHT0m/cgfuVmhWqGyKWB6VOSUfsp/0kDqI5vLpZV0ZQ74Ct1v2oN8X/4cd/12rTIxG94TawzmkVoTdYIEfeoi2XMfwhFjJKECMSJf";
        txtMerchantCode.Text = "5006";
        string plainText = obj.Decrypt(CipherText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        string OldAUIN = plainText.Split('|').GetValue(0).ToString().Split('=').GetValue(1).ToString();
        Random objRandom = new Random();
        string AUIN = "DOITTEST" + objRandom.Next().ToString();
        plainText = plainText.Replace(OldAUIN, AUIN);
        string cipherText = obj.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        RemoteClass myremotepost = new RemoteClass();
        myremotepost.Add("Encdata", cipherText.ToString());
        myremotepost.Add("merchant_code", txtMerchantCode.Text.Trim());
        myremotepost.Add("ChallanType", "");
        myremotepost.Add("AUIN", AUIN);
        myremotepost.Url = url1;
        myremotepost.Post();
    }


    protected void btnAmountMismatch_Click(object sender, EventArgs e)
    {
        SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        string Ciphertext = "5XJ4ysW9cUJBftKs6UAdrDtl7R4SZD7CUY8Nhl8/uVW7Z1EDk52MD8JwfS5TKJ2iYXHt/CPqCA0aX5v7ca2fzkCGeZTTy5aumiDByRdMebhLlrvg/EPXP4FgtPEsigL5OaYjtZM/QOiMWhp58wKl/w43upoYGHW7A0SwbS6BwmUuTFdqCcQnDjCXUbPD0njq+fDsv/ZtfkEH5VKrmJMku2tR3gNqRrlUW1y+heLXaD730FLvfJMXxqLXPSbUp5RV4W2yi8TpSQBKKy96USrcyPqw431KRRWrjhyTCcQ27473yAAgOotStiPM014AGB6LPYbwqjOqXptV0/3PMIvUAQGXfxy5EqLn+yBBHv3xQD/HnOnVOlIkI8Us5dMf12l7QisVE2Gu9BFE/kD8NPBD0lr2DSBNyXqEu2VxZ6MhBzYVLbI2u9ojT7TfQk2jlC9IP0cs3xvaVQe1HpnQgpMnV61KwSFUPRGAIkxnbZE4Bt8qBOQ2hJF9QXd3VpwKpgcZlOc3ZSO/+9Rb43ZhvYA+2KLcBoHUSXBnAdNklF8DuardCcHcVZEbgEiQeknveT8W1zm6SFI/4wSF5b32asX+LLfBVguYfUqEk97przE7BHZc9lvo2isRvm8Bi/qfP7QSABv9fzeDE7b8nYIHRErIcX+hfp9WOyTn+CBO7HWPZkgi96ibxlX1brhtsORuPXItkIi/J8cbRfiwLQjviSXZ5wktDIWXvFabyVyHBls5ra467xjav01Rv+eelOecTY4Y80Ntzw9U50Oh81Y9AWStaqmg+W53nQQRbCZB0jXIPirMN5kruHeE1uX62vgrMKsEHk+JzKsJpx77xNx0rGm3jAkU/8Mh00nzNC/OcQSdli7wiPCQr2DopR+YRcsd0ln/";
        txtMerchantCode.Text = "5006";
        string plainText = obj.Decrypt(Ciphertext, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        string OldAUIN = plainText.Split('|').GetValue(0).ToString().Split('=').GetValue(1).ToString();
        Random objRandom = new Random();
        string AUIN = "DOITTEST" + objRandom.Next().ToString();
        plainText = plainText.Replace(OldAUIN, AUIN);
        string cipherText = obj.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        RemoteClass myremotepost = new RemoteClass();
        myremotepost.Add("Encdata", cipherText.ToString());
        myremotepost.Add("merchant_code", txtMerchantCode.Text.Trim());
        myremotepost.Add("ChallanType", "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");
        myremotepost.Add("AUIN", AUIN);
        myremotepost.Url = url1;
        myremotepost.Post();
    }

    protected void btnBudgetHeadMismatch_Click(object sender, EventArgs e)
    {
        SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        string CipherText = "5XJ4ysW9cUJBftKs6UAdrDtl7R4SZD7CUY8Nhl8/uVVoX80t42vHbn91D43NsF5J79k7oyau3O6/yLBwFb3UXTyEdnPy0M+0XBx4n5aAApMBtY1IRiAUDCYiZimKdVV7SnAeqMdffRODaUIZDGsJ9Gxi1TjxjbXgrke4F5s0zXdS41n0QLQc9aKJccajkHwh1HIZV3tSZ+JceV9CvhqtjManLLQntPDJnKonDhtaQz9LGOrXJmuvc8CLJ6zFjf6uO2/GGFt2anlWnS1gCYqkFnxaqJRQqk+S5p1Bp5OalvlQls2Cq7tdUJrd42ozw3JVrZ6BT55aeqX2l7/nSU2vGx8qsNtoDxvNynQCDg8Y3V9dw9mbVJoqJtkwokt0Lsz1yNYME+/pF6PohUm6lh+y8/R/typeNNb0FKSMNfXW0WP607jmRAfTCDXfZolHfkKCB6016yM/S1ME/G3iHW+VJMH4ySl+56/FuO3semb0/d/wTWjUWhnLJuHKuH5c9Bp50voE6XoOTnFtBN4tGB64bk7DdEltwq6jzgpgwPoWMqXChQvftlSN5CabL9suK1PWyktdMY7c7VAg4ZqSxI50QpdsQF1jZ/68MYSv7FAgC5DuV1FWMgSvBqcCMDHEskU0ht7SvH4LTmb7z2lQfvbLAIT+8fYeLIw745M5ooQYiIyrdA83km8lUiob5SKrB8SX/2pndduegUEh4g6XtOZISgUMObskAZcX7Qbba41oz1+r14n/Qufwi20aBhujWNv5pPgP53X4iuKCRfY4JpAXgiSXhPANf6pgPuNvGOOIsoX5SZKxrer6qCVKau5m1fYLV1Y2tKj5leAnFibFHcDduTh20fczmEwC9j+LkRbKrAF8WkCz/UzBOzQqXWykWuGB";
        txtMerchantCode.Text = "5006";
        string plainText = obj.Decrypt(CipherText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        string OldAUIN = plainText.Split('|').GetValue(0).ToString().Split('=').GetValue(1).ToString();
        Random objRandom = new Random();
        string AUIN = "DOITTEST" + objRandom.Next().ToString();
        plainText = plainText.Replace(OldAUIN, AUIN);
        string cipherText = obj.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        RemoteClass myremotepost = new RemoteClass();
        myremotepost.Add("Encdata", cipherText.ToString());
        myremotepost.Add("merchant_code", txtMerchantCode.Text.Trim());
        myremotepost.Add("ChallanType", "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");
        myremotepost.Add("AUIN", AUIN);
        myremotepost.Url = url1;
        myremotepost.Post();
    }

    protected void btnOfcAmtMismatch_Click(object sender, EventArgs e)
    {
        SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        string CipherText = "5XJ4ysW9cUJBftKs6UAdrDtl7R4SZD7CUY8Nhl8/uVW7Z1EDk52MD8JwfS5TKJ2iYXHt/CPqCA0aX5v7ca2fzkCGeZTTy5aumiDByRdMebhLlrvg/EPXP4FgtPEsigL5OaYjtZM/QOiMWhp58wKl/w43upoYGHW7A0SwbS6BwmUuTFdqCcQnDjCXUbPD0njq+fDsv/ZtfkEH5VKrmJMku2tR3gNqRrlUW1y+heLXaD730FLvfJMXxqLXPSbUp5RV4W2yi8TpSQBKKy96USrcyPqw431KRRWrjhyTCcQ27473yAAgOotStiPM014AGB6LPYbwqjOqXptV0/3PMIvUAQGXfxy5EqLn+yBBHv3xQD/HnOnVOlIkI8Us5dMf12l7QisVE2Gu9BFE/kD8NPBD0lr2DSBNyXqEu2VxZ6MhBzYVLbI2u9ojT7TfQk2jlC9IP0cs3xvaVQe1HpnQgpMnVx/tXQt+G7CWkd/JHqHlIL0KAR/cGeHD5EuqMaykdcJDQSofX1k1xxTemEjMU+oOxpEmB/IeSEy8PBY//s3nxKHPxFtFIibuaIEcXzf1yaAuv4nfV+pWV0XDgD2MwyYynp75gYAtxd0GM4rJlw1HeJWAe0SaRGgBVP89PhjPYtj7qTrs+YCLKp95r4eIhuRO38kNCQeK9RxA/uLOuAzHAMLMngnle70sVWroEBDAEuHLKhkOn0Cm/3mAzMnKuBvz59ybskItULBB2tR22U/q3s2s1Ds/IQtZlM8P206GouytLg2ZvzCfijn3uXmkGPHYyq4Q7sPEGWluJD/SGSpM7FenjrFnnv6x8yz+ao8wsyxaTSIsQYc06jCrcBeNXJgHvkiVZcLxdwqkDDXSzkmb8tUv2U1SwzrcTnqC4pDgn9ck";
        txtMerchantCode.Text = "5006";
        string plainText = obj.Decrypt(CipherText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        string OldAUIN = plainText.Split('|').GetValue(0).ToString().Split('=').GetValue(1).ToString();
        Random objRandom = new Random();
        string AUIN = "DOITTEST" + objRandom.Next().ToString();
        plainText = plainText.Replace(OldAUIN, AUIN);
        string cipherText = obj.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        RemoteClass myremotepost = new RemoteClass();
        myremotepost.Add("Encdata", cipherText.ToString());
        myremotepost.Add("merchant_code", txtMerchantCode.Text.Trim());
        myremotepost.Add("ChallanType", "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");
        myremotepost.Add("AUIN", AUIN);
        myremotepost.Url = url1;
        myremotepost.Post();
    }

    protected void btnCorrectCase_Click1(object sender, EventArgs e)
    {
        RemoteClass myremotepost = new RemoteClass();
        SbiEncryptionDecryption obj = new SbiEncryptionDecryption();
        txtEncData.Text = "5XJ4ysW9cUJBftKs6UAdrDtl7R4SZD7CUY8Nhl8/uVW7Z1EDk52MD8JwfS5TKJ2iWDWt2nlBcAmY9/RcRj91KdlhVPGaqELLxMkmKZD1ODNKXnlgvGEySPTCkggRhRoiTA3kiYrFU4Bn21BiLaHHIrc9a5PEH8R1QKmCAg6N1StKG4HPyF2WRqnUzwUVeGoRnVqk9sea7ksevdtBz9HWqyTBf0dZJc+stemTMRZIjVTqMkdAzlpspEI9obcO+V9tQOaiXwel+W2pGyHbEPbevbzbFUhiX6CJg7uOCSPE+BMRSDcp2TN4juRuKbJJ6XdBljwXAvqCTSAgtQ5Luo0oasufEqv1PRQsyRb1Gmt5gmV726zEiLPgSFhmwwT7vWmTiznowOOmm8ntW7/T1CxZAHrkA8AI5F6/SrMmRd5JVqt56C6ohOCq7MbPO39ArJGS4q99hsFEUt/JAqvv8mJmPaefzd7WCC31cA0r7UDNEbTwnugWg85QHO0TEenzZkUzjnLTw1smgFBIBRNHeqmvtifz+h1hoOfbMZ1v+5pbebIxWHJeFFBtsHRGS43J90G8q3srlOW50aseepDFD8sVWF0EEAmgSQXv5aUD1p6Fxs7a1GiJpy+vY9Tytfirg3T6R0KWotYqotPJ2uqMiqVhODi1UTbCLAA0SwvsuR797Mh8kf/tzbYN+oertrZoqPsELI73wgiS4nAC0U5vqLgJB+AsHSVXFYFynWn2bE90Fgrv6u8ckT5cj5Tp0HNwE5hS13m+s4gUrMlV/skJDDUlHxeLmOxqfV6WnGcLOBm8JvxY65IpzdccSKsctM13ydM/gf4XAh4ORsBV94bB4gaCW/6hzC28dDZPfb/TS+p+mKxjfWezTXxrJFeoW89h9skn";
        txtMerchantCode.Text = "5006";
        string plainText = obj.Decrypt(txtEncData.Text.Trim(), System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        string OldAUIN = plainText.Split('|').GetValue(0).ToString().Split('=').GetValue(1).ToString();
        Random objRandom = new Random();
        string AUIN = "DOITTEST" + objRandom.Next().ToString();
        plainText = plainText.Replace(OldAUIN, AUIN);
        string officexml = "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";
        //string officexml = txtOfficeXml.Text.Trim();
        string cipherText = obj.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + txtMerchantCode.Text.Trim() + ".key");
        myremotepost.Add("Encdata", cipherText.ToString());
        myremotepost.Add("merchant_code", txtMerchantCode.Text.Trim());
        myremotepost.Add("ChallanType", officexml);
        myremotepost.Add("AUIN", AUIN);
        myremotepost.Url = url1;
        myremotepost.Post();
    }
    protected void MobileVerification_TextChanged(object sender, EventArgs e)
    {
        if (VerifyNumericVal(txtMobile.Text.Trim()))
        {
            string str = string.Empty;
            ViewState["UserID"] = "52";
            ViewState["MobileNumber"] = txtMobile.Text.Trim();
            EgMobileAuthentication objEgMobileVerification = new EgMobileAuthentication();
            objEgMobileVerification.mobileno = txtMobile.Text.Trim();
            objEgMobileVerification.usreid = "52";
            string res = objEgMobileVerification.MobileNumberVerify();
            if (res == "1" && GetVerificationCodeOnMobile() == true)
            {
                lblMsgMobileVerify.Visible = true;
                lblMsgOtp.Visible = false;
                txtOtp.Text = string.Empty;
                lblMsgMobileVerify.Text = "Message Send Successfully.!";
            }
            else
            {
                lblMsgMobileVerify.Visible = true;
                lblMsgOtp.Visible = false;
                txtMobile.Text = string.Empty;
                txtMobile.Focus();
                txtOtp.Text = string.Empty;
                lblMsgMobileVerify.Text = "Mobile No is Not Authenticated.!";
            }
        }
        else
        {
            lblMsgMobileVerify.Visible = true;
            lblMsgOtp.Visible = false;
            txtMobile.Text = string.Empty;
            txtMobile.Focus();
            txtOtp.Text = string.Empty;
            lblMsgMobileVerify.Text = "Wrong Mobile No !";
        }
        //return str;
    }
    protected void OTPVerification_TextChanged(object sender, EventArgs e)
    {

        string str = string.Empty;
        EgForgotPasswordBL objEgForgotPasswordBL = new EgForgotPasswordBL();
        objEgForgotPasswordBL.UserId = Convert.ToInt32("52");
        objEgForgotPasswordBL.VerificationCode = txtOtp.Text.Trim();
        string result = objEgForgotPasswordBL.VerifyCodeSMS();
        switch (result)
        {
            case "1":
                DivDoIT.Visible = true;
                divVerify.Visible = false;
                break;
            case "2":
                lblMsgMobileVerify.Visible = true;
                lblMsgOtp.Visible = true;
                txtMobile.Text = string.Empty;
                txtMobile.Focus();
                txtOtp.Text = string.Empty;
                lblMsgOtp.Text = "Verification Code expires.Please Request again.!";
                break;
            case "0":
                lblMsgMobileVerify.Visible = true;
                lblMsgOtp.Visible = true;
                txtOtp.Focus();
                lblMsgOtp.Text = "Invalid Verification Code.!";
                break;
        }
        //return str;
    }

    public bool GetVerificationCodeOnMobile()
    {
        string Vcode = "";
        EgForgotPasswordBL objEgForgotPasswordBL = new EgForgotPasswordBL();
        objEgForgotPasswordBL.UserId = Convert.ToInt32(ViewState["UserID"]);
        Vcode = objEgForgotPasswordBL.VerifyCode().ToString().Trim();

        if ((ViewState["MobileNumber"].ToString() != "" || ViewState["MobileNumber"] != null) && (Vcode != "" || Vcode != null))
        {
            return send("egras.auth", "Jh*$23et", Vcode.Trim(), "91" + ViewState["MobileNumber"].ToString(), "EGRASJ");

        }
        else
            return false;
    }
    /// <summary>
    /// Call SMS Utility for send code on mobile number 
    /// </summary>
    /// <param name="uid">User Name </param>
    /// <param name="password">Password</param>
    /// <param name="message">VerificationCode</param>
    /// <param name="no">MobileNumber</param>
    /// <param name="SENDERID">Unique User SEnderID</param>
    public bool send(string uid, string password, string message, string no, string SENDERID)
    {
        EgEncryptDecrypt ObjEncrcryptDecrypt = new EgEncryptDecrypt();
        SbiEncryptionDecryption objEncry = new SbiEncryptionDecryption();
        RemoteClass myremotepost = new RemoteClass();
        string plainText = string.Format("Vcode={0}|Mobile={1}", message, no);
        string CheckSum = ObjEncrcryptDecrypt.GetMD5Hash(plainText);
        //string CheckSum = ObjEncrcryptDecrypt.GetSHA256(plainText);
        plainText = plainText + "|checkSum=" + CheckSum;

        string cipherText = objEncry.Encrypt(plainText, System.Web.Configuration.WebConfigurationManager.AppSettings["Securekey"] + "RAJASTHAN_EGRASS.key");
             // string cipherText = objEncry.Encrypt(plainText, Server.MapPath("Key/RAJASTHAN_EGRASS.key"));
             //SMSservice.Service SMSservice = new SMSservice.Service();
        SMSservice.EgTrgService SMSservice = new SMSservice.EgTrgService();

        EgForgotPasswordBL objEgForgotPasswordBL = new EgForgotPasswordBL();

        //ServicePointManager.CertificatePolicy = new TrustAllCertificatePolicy();
        string responseString = SMSservice.GetSMSDetails(cipherText);
        //HttpWebRequest myReq =
        //    (HttpWebRequest)WebRequest.Create("https://smsgw.sms.gov.in/failsafe/HttpLink?username=" + uid + "&pin=" + password + "&message=" + "Egras Password Reset Code:" + message + "&mnumber=" + no + "&signature=" + SENDERID);

        //HttpWebResponse myResp = (HttpWebResponse)myReq.GetResponse();
        //System.IO.StreamReader respStreamReader = new System.IO.StreamReader(myResp.GetResponseStream());
        //string responseString = respStreamReader.ReadToEnd();// "Message Accepted for Request ID=12313946898506681731361~code=API000 & info=Platform accepted & Time =2014/03/13/11/20";//
        //respStreamReader.Close();
        //myResp.Close();
        if (responseString.ToString().Contains("API000") == true)
        {
            objEgForgotPasswordBL.SMSCount();
            return true;
        }
        else
            return false;
        //return responseString.ToString();
    }
    public bool VerifyNumericVal(string number)
    {
        string expresion;
        expresion = "^[\\d]{10,10}";
        if (Regex.IsMatch(number, expresion))
        {
            if (Regex.Replace(number, expresion, string.Empty).Length == 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return false;
        }
    }
}