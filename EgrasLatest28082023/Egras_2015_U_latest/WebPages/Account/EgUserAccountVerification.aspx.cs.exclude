using System;
using System.Linq;
using System.Web.UI;
using EgBL;
using System.Net;
using System.Collections.Generic;

public partial class WebPages_Account_EgUserAccountVerification : System.Web.UI.Page
{
    //EgChangePasswordBL objChangePassword = new EgChangePasswordBL();
    static string MobileNumber;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Request.QueryString.Count > 0)
        {
            if (ViewState["UserID"] == null)
            {
                EgEncryptDecrypt objEgEncryptDecrypt = new EgEncryptDecrypt();
                string strReqq = Request.Url.ToString();
                strReqq = strReqq.Substring(strReqq.IndexOf('?') + 1);
                List<string> strList = objEgEncryptDecrypt.Decrypt(strReqq);
                ViewState["UserID"] = strList[1].ToString();
            }
        }
        else
        {
            Response.Redirect("EgForgotPassword.aspx");
        }
        if (!IsPostBack)
        {
            EgUserRegistrationBL objUserReg = new EgUserRegistrationBL();
            objUserReg.UserId = Convert.ToInt32(ViewState["UserID"]);
            objUserReg.GetUserVerifyDetails();
            lblName.Text = objUserReg.FirstName;
            MobileNumber = objUserReg.MobilePhone.ToString();
            lblMobile.Text = "+**********" + objUserReg.MobilePhone.Substring(8, 2);
        }

    }
    protected void lnkBack_Click(object sender, EventArgs e)
    {
        Response.Redirect("~\\Default.aspx");
    }

    /// <summary>
    ///  Reset User  Password 
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnReSetPass_Click(object sender, EventArgs e)
    {
        EgChangePasswordBL objChangePassword = new EgChangePasswordBL();
        //EgForgotPasswordBL objForgotPassword = new EgForgotPasswordBL();
        if (txtNewPassword.Text != "" && txtCnfPassword.Text != "")
        {

            if (txtNewPassword.Text == txtCnfPassword.Text)
            {

                objChangePassword.Password = txtNewPassword.Text;//GeneralClass.Md5AddSecret(txtNewPassword.Text.Trim());
                objChangePassword.UserId = Convert.ToInt32(ViewState["UserID"]);
                string output = objChangePassword.AdminChangeUserPassword();

                if (output.Trim() == "2")
                {
                    ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('New Password Already Used !!')", true);
                }
                if (output.Trim() == "3")
                {
                    ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('changed Successfully.')", true);
                    btnReSetPass.Enabled = false;
                }

            }
            else
            {
                ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('New password and confirm password Should be same.!')", true);
            }
        }
        else
        {
            ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('Password and Conform Password is not Blank')", true);

        }

    }
    /// <summary>
    /// Call Mobile Service
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnverify_Click(object sender, EventArgs e)
    {
        if (MobileNumber != null)
        {
            if (GetVerificationCodeOnMobile() == true)
            {
                ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('Message Send Successfully.!')", true);
                lstrecord.Visible = false;
                FieldsetCode.Visible = true;
            }
            else
            {
                ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('Message not send.Please try again.!')", true);
            }
        }
        else
        {
            Response.Redirect("EgForgotPassword.aspx");
        }
    }

    /// <summary>
    /// Check User Request Time is less than 24 hr then return old verification code 
    /// else delete old verif. code and generate new Verification code and Insert 
    /// </summary>
    public bool GetVerificationCodeOnMobile()
    {
        string Vcode = "";
        EgForgotPasswordBL objEgForgotPasswordBL = new EgForgotPasswordBL();
        objEgForgotPasswordBL.UserId = Convert.ToInt32(ViewState["UserID"]);
        Vcode = objEgForgotPasswordBL.VerifyCode().ToString().Trim();
        if (Vcode.Trim() == "0")
        {
            Vcode = GenerateRandomAlphaNumericCode(6);
            objEgForgotPasswordBL.VerificationCode = Vcode.ToString().Trim();
            objEgForgotPasswordBL.InsertMobileVerifyCode();
        }
        if (MobileNumber.ToString() != "" || MobileNumber != null)
        {
            return send("egras.auth", "Jh*$23et", Vcode.Trim(), "91" + MobileNumber.ToString(), "EGRASJ");
        }
        else
            return false;
        //return Vcode.Trim();
    }
    /// <summary>
    /// Call SMS Utility for send code on mobile number 
    /// </summary>
    /// <param name="uid">User Name </param>
    /// <param name="password">Password</param>
    /// <param name="message">VerificationCode</param>
    /// <param name="no">MobileNumber</param>
    /// <param name="SENDERID">Unique User SEnderID</param>
    public bool send(string uid, string password, string message, string no, string SENDERID)
    {
        HttpWebRequest myReq =
            (HttpWebRequest)WebRequest.Create("https://smsgw.sms.gov.in/failsafe/HttpLink?username=" + uid + "&pin=" + password + "&message=" + "Egras Password Reset Code:" + message + "&mnumber=" + no + "&signature="  + "&dlt_entity=" + "1001524671154484790" + "&dlt_tempate_id=" + null);

        HttpWebResponse myResp = (HttpWebResponse)myReq.GetResponse();
        System.IO.StreamReader respStreamReader = new System.IO.StreamReader(myResp.GetResponseStream());
        string responseString = respStreamReader.ReadToEnd();//"Message Accepted for Request ID=12313946898506681731361~code=API000 & info=Platform accepted & Time =2014/03/13/11/20";//
        respStreamReader.Close();
        myResp.Close();
        if (responseString.ToString().Contains("API000") == true)
        {
            return true;
        }
        else
            return false;


        //return responseString.ToString();
    }
    /// <summary>
    /// Generate Random number 
    /// </summary>
    /// <param name="length">7</param>
    /// <returns>Example :- 178569</returns>
    public static string GenerateRandomAlphaNumericCode(int length)
    {
        string characterSet = "0123456789";
        Random random = new Random();

        //The below code will select the random characters from the set
        //and then the array of these characters are passed to string 
        //constructor to make an alphanumeric string
        string randomCode = new string(
            Enumerable.Repeat(characterSet, length)
                .Select(set => set[random.Next(set.Length)])
                .ToArray());
        return randomCode;
    }
    /// <summary>
    /// Check User  Verifiaction Code is Valid and Not if it's valid then he can change Password
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnmobilecode_Click(object sender, EventArgs e)
    {
        EgForgotPasswordBL objEgForgotPasswordBL = new EgForgotPasswordBL();
        objEgForgotPasswordBL.UserId = Convert.ToInt32(ViewState["UserID"]);
        objEgForgotPasswordBL.VerificationCode = txtcode.Text.Trim();
        string result = objEgForgotPasswordBL.VerifyCodeSMS();
        switch (result)
        {
            case "1":
                divchangePass.Visible = true;
                FieldsetCode.Visible = false;
                break;
            case "2":
                ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "PopupScript", "alert('Verification Code expires.Please Request again.!')", true);
                lstrecord.Visible = true;
                FieldsetCode.Visible = false;
                break;
            case "0":
                ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "PopupScript", "alert('Invalid Verification Code.')", true);
                break;
        }

    }

    protected void lknResendCode_Click(object sender, EventArgs e)
    {
        if (MobileNumber != null)
        {
            if (GetVerificationCodeOnMobile() == true)
            {
                ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('Message Send Successfully.!')", true);
            }
            else
            {
                ScriptManager.RegisterClientScriptBlock(UpdatePanel1, this.GetType(), "MSG", "alert('Message not send.Please try again.!')", true);
            }
        }
        else
        {
            Response.Redirect("EgForgotPassword.aspx");
        }
    }
    protected void Cancelbtn_Click(object sender, EventArgs e)
    {
        Response.Redirect("~\\Default.aspx");
    }
}